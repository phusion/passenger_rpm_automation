# Based on http://pkgs.fedoraproject.org/cgit/rubygem-passenger.git/tree/

%global package_name <%= PASSENGER_RPM_NAME %>
%global package_version <%= PASSENGER_VERSION %>
%global package_release <%= PASSENGER_RPM_RELEASE %>
%global tarball_name <%= PASSENGER_TARBALL_NAME %>
%global tarball_version <%= PASSENGER_VERSION %>
%global apache_module_package_name <%= PASSENGER_APACHE_MODULE_RPM_NAME %>
%global nginx_module_package_name <%= PASSENGER_NGINX_MODULE_RPM_NAME %>
%global namespace <%= PhusionPassenger::GLOBAL_NAMESPACE_DIRNAME %>
%global nginx_version <%= NGINX_VERSION %>
%global bundled_boost_version 1.76.0
%global is_enterprise <%= PASSENGER_ENTERPRISE ? 1 : 0 %>
<% if dynamic_module_supported?(@distribution) %>
%global dynamic_module_supported 1
%global latest_nginx_epoch <%= latest_nginx_epoch(@distribution) %>
%global latest_nginx_release <%= latest_nginx_release(@distribution) %>
%global latest_nginx_version <%= latest_nginx_version(@distribution) %>
<% else %>
%global dynamic_module_supported 0
<% end %>
%global release_dist .<%= @distribution %>

# Fedora <= 18 and RHEL <= 6 used the rubyabi requirement.
# This is gone in later versions.
%if 0%{?fc18}
%global uses_rubyabi 1
%global rubyabi 1.9.1
%endif
%if 0%{?el6}
%global uses_rubyabi 1
%global rubyabi 1.8
%endif

%if 0%{?fedora} >= 19
%global gem_extdir %{gem_extdir_mri}
%endif
%{!?gem_extdir: %global gem_extdir %{gem_instdir}/extdir}

%{!?_httpd_mmn: %{expand: %%global _httpd_mmn %%(cat %{_includedir}/httpd/.mmn 2>/dev/null || echo 0-0)}}
%{!?_httpd_confdir:     %{expand: %%global _httpd_confdir     %%{_sysconfdir}/httpd/conf.d}}
# /etc/httpd/conf.d with httpd < 2.4 and defined as /etc/httpd/conf.modules.d with httpd >= 2.4
%{!?_httpd_modconfdir:  %{expand: %%global _httpd_modconfdir  %%{_sysconfdir}/httpd/conf.d}}
%{!?_httpd_moddir:      %{expand: %%global _httpd_moddir      %%{_libdir}/httpd/modules}}

%{!?_nginx_confdir:     %{expand: %%global _nginx_confdir     %%{_sysconfdir}/nginx/conf.d}}
%{!?_nginx_modconfdir:  %{expand: %%global _nginx_modconfdir  %%{_datadir}/nginx/modules}}
%{!?_nginx_moddir:      %{expand: %%global _nginx_moddir      %%{_libdir}/nginx/modules}}

%{!?ruby_vendorlibdir: %global ruby_vendorlibdir %(ruby -rrbconfig -e 'puts RbConfig::CONFIG["vendorlibdir"]')}
%{!?ruby_vendorarchdir: %global ruby_vendorarchdir %(ruby -rrbconfig -e 'puts RbConfig::CONFIG["vendorarchdir"]')}
%global passenger_ruby_libdir %{ruby_vendorlibdir}
%global locations_ini %{passenger_ruby_libdir}/phusion_passenger/locations.ini

# We leave out the 'mls', 'minimum', 'strict' and 'sandbox' variants on purpose.
#
# 'mls' lacks unconfined_t.
# 'minimum' lacks httpd_t.
# 'sandbox' is only for the policycoreutils-sandbox tool.
#
# 'strict' is omitted because Passenger’s policy essentially introduces a way for
# the web server to run PassengerAgent (and subprocesses) in the unconfined domain,
# which is philosophically incompatible with the idea of the strict policy
#
# REMINDER: if you change this list, don't forget to update the 'triggerin'
# sections.
%global static_selinux_variants targeted


Summary: Phusion Passenger application server
Name: %{package_name}
Version: %{package_version}
Release: %{package_release}%{?release_dist}
Group: System Environment/Daemons
# Passenger code uses MIT license.
# Bundled(Boost) uses Boost Software License
# BCrypt and Blowfish files use BSD license.
# Documentation is CC-BY-SA
# See: https://bugzilla.redhat.com/show_bug.cgi?id=470696#c146
License: Boost and BSD and BSD with advertising and MIT and zlib
URL: https://www.phusionpassenger.com
Vendor: Phusion
Packager: Phusion

Source: http://s3.amazonaws.com/phusion-passenger/releases/%{tarball_name}-%{tarball_version}.tar.gz
Source1: http://nginx.org/download/nginx-%{nginx_version}.tar.gz
Source2: passenger.fc
Source3: passenger.if
Source4: passenger.te
Source10: passenger.logrotate
Source100: apache-passenger.conf.in
Source101: apache-passenger-module.conf
Source102: passenger.tmpfiles
%if %{dynamic_module_supported}
Source200: nginx-passenger-module.conf
Source201: nginx-mod-passenger.conf
%endif

# https://bugzilla.redhat.com/show_bug.cgi?id=985634
Patch107:       rubygem-passenger-4.0.18-GLIBC_HAVE_LONG_LONG.patch

Requires: rubygems
# XXX: Needed to run passenger standalone
Requires: rubygem(rack)
Requires: rubygem(rake)
%if 0%{?uses_rubyabi}
Requires: ruby(abi) = %{rubyabi}
%else
Requires: ruby(release)
%endif

%if "0%{_selinux_policy_version}" != "0"
Requires: selinux-policy >= %{_selinux_policy_version}
%endif
Requires(post):   /usr/sbin/semodule, /sbin/restorecon, /sbin/fixfiles
Requires(postun): /usr/sbin/semodule, /sbin/restorecon, /sbin/fixfiles

%if 0%{?rhel} >= 6 || 0%{?fedora} >= 15
BuildRequires: libcurl-devel
%else
BuildRequires: curl-devel
%endif
%if 0%{?rhel} >= 8 || 0%{?fedora} >= 30
BuildRequires: /usr/bin/pathfix.py
BuildRequires: python3-devel
%endif

BuildRequires: httpd-devel
BuildRequires: ruby
BuildRequires: ruby-devel
BuildRequires: rubygems
BuildRequires: rubygems-devel
BuildRequires: rubygem(rake) >= 0.8.1
BuildRequires: rubygem(rack)
BuildRequires: zlib-devel
BuildRequires: pcre-devel
BuildRequires: openssl-devel
BuildRequires: selinux-policy
BuildRequires: selinux-policy-targeted
%if 0%{?rhel} >= 7
BuildRequires: selinux-policy-sandbox
%endif
BuildRequires: checkpolicy, selinux-policy-devel
BuildRequires: libselinux-devel

Provides: %{package_name} = %{version}-%{release}
Provides: bundled(boost)  = %{bundled_boost_version}

Obsoletes: rubygem-passenger < %{version}-%{release}
Obsoletes: rubygem-passenger-native < %{version}-%{release}
Obsoletes: rubygem-passenger-native-libs < %{version}-%{release}

%if %{is_enterprise}
Obsoletes: passenger
Conflicts: passenger-devel
Conflicts: passenger-doc
Conflicts: mod_passenger
%endif

%description
Phusion Passenger® is a web server and application server, designed to be fast,
robust and lightweight. It takes a lot of complexity out of deploying web apps,
adds powerful enterprise-grade features that are useful in production,
and makes administration much easier and less complex. It supports Ruby,
Python, Node.js and Meteor.

%package -n %{apache_module_package_name}
Summary: Apache Module for Phusion Passenger
Group: System Environment/Daemons
BuildRequires:  httpd-devel
Requires: httpd-mmn = %{_httpd_mmn}
Requires: %{package_name}%{?_isa} = %{version}-%{release}
%if %{is_enterprise}
Obsoletes: mod_passenger
%endif
License: Boost and BSD and BSD with advertising and MIT and zlib

%description -n %{apache_module_package_name}
This package contains the pluggable Apache server module for Phusion Passenger®.

%package devel
Summary: Phusion Passenger development files
Group: System Environment/Daemons
Requires: %{package_name}%{?_isa} = %{version}-%{release}
Provides: bundled(boost-devel) = %{bundled_boost_version}
Obsoletes: rubygem-passenger-devel < 4.0.33
%if %{is_enterprise}
Obsoletes: passenger-devel
%endif
License: Boost and BSD and BSD with advertising and GPL+ and MIT and zlib

%description devel
This package contains development files for Phusion Passenger®. Installing this
package allows it to compile native extensions for non-standard Ruby interpreters,
and allows Passenger Standalone to use a different Nginx core version.

%package doc
Summary: Phusion Passenger documentation
Group: System Environment/Daemons
Requires: %{package_name} = %{version}-%{release}
Obsoletes: rubygem-passenger-doc < %{version}-%{release}
Provides:  rubygem-passenger-doc = %{version}-%{release}
%if %{is_enterprise}
Obsoletes: passenger-doc
%endif
BuildArch: noarch
License: CC-BY-SA and MIT and (MIT or GPL+)

%description doc
This package contains documentation files for Phusion Passenger®.

%if %{dynamic_module_supported}
%package -n %{nginx_module_package_name}
Summary: Nginx Module for Phusion Passenger
Group: System Environment/Daemons
Requires: nginx = %{latest_nginx_epoch}:%{latest_nginx_version}
Requires: %{package_name}%{?_isa} = %{version}-%{release}
%if %{is_enterprise}
Obsoletes: nginx-mod-http-passenger
%endif
License: Boost and BSD and BSD with advertising and MIT and zlib

%description -n %{nginx_module_package_name}
This package contains the pluggable Nginx server module for Phusion Passenger®.
%endif

%prep
%setup -q -n %{tarball_name}-%{tarball_version}
tar xzf %{SOURCE1}

# fix passenger boost for glibc >= 2.18
%if 0%{?fedora} >= 20
    %patch107 -p1 -b .glibc-long
%endif

%build
export EXTRA_CFLAGS="${CFLAGS:-%optflags} -Wno-deprecated"
export EXTRA_CXXFLAGS="${CXXFLAGS:-%optflags} -Wno-deprecated"

# Remove default optimization flags and use Phusion Passenger's recommended optimization flags.
export EXTRA_CFLAGS=`echo "$EXTRA_CFLAGS" | sed 's|-O2||g'`
export EXTRA_CXXFLAGS=`echo "$EXTRA_CXXFLAGS" | sed 's|-O2||g'`
export OPTIMIZE=yes
export USE_SELINUX=yes

export CACHING=false

# Speed up ccache (reduce I/O) by lightly compressing things.
export CCACHE_COMPRESS=1
export CCACHE_COMPRESSLEVEL=3

export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Build Passenger.
rake fakeroot \
    NATIVE_PACKAGING_METHOD=rpm \
    FS_PREFIX=%{_prefix} \
    FS_BINDIR=%{_bindir} \
    FS_SBINDIR=%{_sbindir} \
    FS_DATADIR=%{_datadir} \
    FS_LIBDIR=%{_libdir} \
    FS_DOCDIR=%{_docdir} \
    RUBYLIBDIR=%{ruby_vendorlibdir} \
    RUBYARCHDIR=%{ruby_vendorarchdir} \
    APACHE2_MODULE_PATH=%{_httpd_moddir}/mod_passenger.so

# Build Nginx core for Passenger Standalone.
nginx_config_opts=`ruby -Isrc/ruby_supportlib -rphusion_passenger -e 'PhusionPassenger.locate_directories; PhusionPassenger.require_passenger_lib "config/nginx_engine_compiler"; puts PhusionPassenger::Config::NginxEngineCompiler.configure_script_options'`
pushd nginx-%{nginx_version}
./configure --prefix=/tmp $nginx_config_opts --add-module=`pwd`/../src/nginx_module
make
popd

%if %{dynamic_module_supported}
	/usr/bin/rake nginx:as_dynamic_module && \
		pushd nginx-%{latest_nginx_version} && \
		./configure \
%if 0%{?el7}
		--with-compat \
		--with-threads \
%endif
		--with-pcre \
		--with-pcre-jit \
		--with-ipv6 \
		--with-file-aio \
		--with-debug \
		--with-http_realip_module \
		--with-http_dav_module \
		--with-http_ssl_module \
		--http-proxy-temp-path=/var/lib/nginx/tmp/proxy \
		--add-dynamic-module=`pwd`/../src/nginx_module && \
		echo '#define NGX_HTTP_HEADERS 1' >> objs/ngx_auto_config.h && \
		make -f objs/Makefile modules && \
		popd
%endif

# Build SELinux policy modules.
%{__cp} %{SOURCE3} %{SOURCE4} .
%{__cp} %{SOURCE2} passenger.fc.tmp
%{__sed} -i "s|SUPPORT_BINARIES_DIR_MAIN|%{_libdir}/%{namespace}/support-binaries|g" passenger.fc.tmp
%{__sed} -i "s|SUPPORT_BINARIES_DIR_ALT|%{_prefix}/lib/%{namespace}/support-binaries|g" passenger.fc.tmp
uniq passenger.fc.tmp > passenger.fc
for selinuxvariant in %{static_selinux_variants}; do
    %{__make} -f %{_datadir}/selinux/devel/Makefile NAME=passenger
    %{__mv} passenger.pp passenger.pp.${selinuxvariant}
    %{__make} -f %{_datadir}/selinux/devel/Makefile NAME=passenger clean
done


%install
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

%{__rm} -rf %{buildroot}
%{__mkdir} %{buildroot}
%{__cp} -a pkg/fakeroot/* %{buildroot}/
%{__cp} nginx-%{nginx_version}/objs/nginx %{buildroot}%{_libdir}/%{namespace}/support-binaries/nginx-%{nginx_version}

%if %{dynamic_module_supported}
%{__mkdir_p} %{buildroot}%{_nginx_moddir} %{buildroot}%{_nginx_confdir} %{buildroot}%{_nginx_modconfdir}

%if %{is_enterprise}
    %{__cp} nginx-%{latest_nginx_version}/objs/ngx_http_passenger_module.so %{buildroot}%{_nginx_moddir}/ngx_http_passenger_enterprise_module.so
%else
    %{__cp} nginx-%{latest_nginx_version}/objs/ngx_http_passenger_module.so %{buildroot}%{_nginx_moddir}/ngx_http_passenger_module.so
%endif

# Install Nginx config.
%if %{is_enterprise}
    %{__sed} -e 's|passenger_module|passenger_enterprise_module|g' %{SOURCE200} > mod-http-passenger-enterprise.conf
    %{__install} -pm 0644 mod-http-passenger-enterprise.conf %{buildroot}%{_nginx_modconfdir}/mod-http-passenger-enterprise.conf
%else
    %{__install} -pm 0644 %{SOURCE200} %{buildroot}%{_nginx_modconfdir}/mod-http-passenger.conf
%endif

%{__sed} -e 's|@PASSENGERROOT@|%{passenger_ruby_libdir}/phusion_passenger/locations.ini|g' %{SOURCE201} > nginx.conf
touch -r %{SOURCE201} nginx.conf
%{__install} -pm 0644 nginx.conf %{buildroot}%{_nginx_confdir}/passenger.conf

%endif

# Install bootstrapping code into the executables and the Nginx config script.
./dev/install_scripts_bootstrap_code.rb --ruby %{passenger_ruby_libdir} \
    %{buildroot}%{_bindir}/* \
    %{buildroot}%{_sbindir}/* \
    `find %{buildroot} -name rack_handler.rb`
%if %{is_enterprise}
./dev/install_scripts_bootstrap_code.rb --ruby %{passenger_ruby_libdir} \
    `find %{buildroot} -name port-binding-proxy.rb`
%endif
./dev/install_scripts_bootstrap_code.rb --nginx-module-config %{_bindir} %{buildroot}%{_datadir}/%{namespace}/ngx_http_passenger_module/config

# Install Apache config.
%{__mkdir_p} %{buildroot}%{_httpd_confdir} %{buildroot}%{_httpd_modconfdir}
%{__sed} -e 's|@PASSENGERROOT@|%{passenger_ruby_libdir}/phusion_passenger/locations.ini|g' %{SOURCE100} > passenger.conf
%if !(0%{?rhel} >= 7 || 0%{?fedora} >= 16)
    %{__sed} -i -e '/^# *Require all granted/d' passenger.conf
%endif

%if "%{_httpd_modconfdir}" == "%{_httpd_confdir}"
    %{__cat} %{SOURCE101} passenger.conf > passenger-combined.conf
    touch -r %{SOURCE100} passenger-combined.conf
    %{__install} -pm 0644 passenger-combined.conf %{buildroot}%{_httpd_confdir}/passenger.conf
%else
    touch -r %{SOURCE100} passenger.conf
    %{__install} -pm 0644 passenger.conf %{buildroot}%{_httpd_confdir}/passenger.conf
    %{__install} -pm 0644 %{SOURCE101} %{buildroot}%{_httpd_modconfdir}/10-passenger.conf
    touch -r %{SOURCE101} %{buildroot}%{_httpd_modconfdir}/10-passenger.conf
%endif

# Make our ghost log and run directories...
%{__mkdir_p} %{buildroot}%{_localstatedir}/log/passenger-analytics
%{__mkdir_p} %{buildroot}%{_localstatedir}/run/passenger-instreg
%{__mkdir_p} %{buildroot}%{_prefix}/lib/tmpfiles.d 
%if 0%{?rhel} >= 7 || 0%{?fedora} >= 16
    %{__install} -m 644 -p %{SOURCE102} \
        %{buildroot}%{_prefix}/lib/tmpfiles.d/passenger.conf
%endif

# logrotate
%{__mkdir_p} %{buildroot}%{_sysconfdir}/logrotate.d
%{__install} -pm 0644 %{SOURCE10} %{buildroot}%{_sysconfdir}/logrotate.d/passenger

# Install man pages into the proper location.
%{__mkdir_p} %{buildroot}%{_mandir}/man1
%{__mkdir_p} %{buildroot}%{_mandir}/man8
%{__cp} man/*.1 %{buildroot}%{_mandir}/man1
%{__cp} man/*.8 %{buildroot}%{_mandir}/man8

# Fix Python scripts with shebang which are not executable
%if 0%{?rhel} >= 8 || 0%{?fedora} >= 30
pathfix.py -pni "%{__python3} %{py3_shbang_opts}" %{buildroot}%{_datadir}/%{namespace}/helper-scripts/wsgi-loader.py
%endif
%{__chmod} +x %{buildroot}%{_datadir}/%{namespace}/helper-scripts/wsgi-loader.py

# Install SELinux policy module.
for selinuxvariant in %{static_selinux_variants}; do
    %{__install} -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}
    %{__install} -p -m 644 passenger.pp.${selinuxvariant} \
        %{buildroot}%{_datadir}/selinux/${selinuxvariant}/passenger.pp
done


%define listActualSelinuxVariants() \
    actual_selinux_variants=; \
    for selinux_policy_file in /etc/selinux/*/policy; do \
        selinux_policy_dir=$(dirname ${selinux_policy_file}); \
        actual_selinux_variants="$actual_selinux_variants $(basename ${selinux_policy_dir})"; \
    done; \
    actual_selinux_variants=$(echo ${actual_selinux_variants}); \
    if [ -z "${actual_selinux_variants}" ]; then \
        actual_selinux_variants=%{static_selinux_variants}; \
    fi

%post
if /usr/sbin/sestatus | grep 'SELinux status' | grep -q enabled; then
    %listActualSelinuxVariants
    for selinuxvariant in ${actual_selinux_variants}; do
        if [ -e %{_datadir}/selinux/${selinuxvariant}/passenger.pp ]; then
            echo "Installing Passenger SELinux policy for the $selinuxvariant variant"
            /usr/sbin/semodule -s ${selinuxvariant} -i \
                %{_datadir}/selinux/${selinuxvariant}/passenger.pp || :
        fi
    done
    /sbin/fixfiles -R %{package_name} restore || :
    /sbin/restorecon -R %{_libdir}/%{namespace}/support-binaries || :
fi

%postun
if [ $1 -eq 0 ] ; then
    %listActualSelinuxVariants
    for selinuxvariant in ${actual_selinux_variants}; do
        /usr/sbin/semodule -s ${selinuxvariant} -r passenger &> /dev/null || :
    done
    /sbin/fixfiles -R %{package_name} restore || :
    [ -d %{_libdir}/%{namespace}/support-binaries ] && \
        /sbin/restorecon -R %{_libdir}/%{namespace}/support-binaries &> /dev/null || :
fi

%define fixupSelinuxPolicy() \
    if /usr/sbin/sestatus | grep 'SELinux status' | grep -q enabled && \
        [ -e %{_datadir}/selinux/%1/passenger.pp ]; \
    then \
        echo "Fixing up Passenger's SELinux policy for the %1 variant"; \
        /usr/sbin/semodule -s %1 -i %{_datadir}/selinux/%1/passenger.pp || true; \
        /sbin/fixfiles -R %{package_name} restore || true; \
        /sbin/restorecon -R %{_libdir}/%{namespace}/support-binaries || true; \
    fi

%triggerin -- selinux-policy-targeted
%fixupSelinuxPolicy targeted


%files
%{_bindir}/*
%{_sbindir}/*
%{_libdir}/%{namespace}/support-binaries
%if 0%{?rhel} >= 7 || 0%{?fedora} >= 16
    %{_prefix}/lib/tmpfiles.d/passenger.conf
%endif
%{_datadir}/%{namespace}/helper-scripts
%{_datadir}/%{namespace}/templates
%{_datadir}/%{namespace}/standalone_default_root
%{_datadir}/%{namespace}/node
%{_datadir}/%{namespace}/*.types
%{_datadir}/%{namespace}/*.crt
%{_datadir}/%{namespace}/*.txt
%{_datadir}/%{namespace}/*.pem
%{_datadir}/%{namespace}/*.p12
%{_datadir}/selinux/*/passenger.pp
%dir %{_localstatedir}/log/passenger-analytics
%dir %attr(755, root, root) %{_localstatedir}/run/passenger-instreg
%{_sysconfdir}/logrotate.d/passenger
%{_mandir}/*/*
%{passenger_ruby_libdir}/*
%{ruby_vendorarchdir}/passenger_native_support.so

%files doc
%{_docdir}/%{namespace}/*

%files devel
%{_datadir}/%{namespace}/ngx_http_passenger_module
%{_datadir}/%{namespace}/ruby_extension_source
%{_datadir}/%{namespace}/include
%{_libdir}/%{namespace}/common
%{_libdir}/%{namespace}/nginx_dynamic

%files -n %{apache_module_package_name}
%config(noreplace) %{_httpd_modconfdir}/*.conf
%if "%{_httpd_modconfdir}" != "%{_httpd_confdir}"
    %config(noreplace) %{_httpd_confdir}/*.conf
%endif
%{_httpd_moddir}/mod_passenger.so

%if %{dynamic_module_supported}
%files -n %{nginx_module_package_name}
    %config(noreplace) %{_nginx_modconfdir}/*.conf
    %config(noreplace) %{_nginx_confdir}/*.conf
%{_nginx_moddir}/ngx_http_passenger*_module.so
%endif

%changelog
* Thu Nov 14 2013 Jan Kaluza <jkaluza@redhat.com> - 4.0.18-4
- load native library from proper path

* Thu Oct 31 2013 Jan Kaluza <jkaluza@redhat.com> - 4.0.18-3
- fix #1021940 - add locations.ini with proper Fedora locations

* Wed Sep 25 2013 Troy Dawson <tdawson@redhat.com> - 4.0.18-2
- Cleanup spec file
- Fix for bz#987879

* Tue Sep 24 2013 Troy Dawson <tdawson@redhat.com> - 4.0.18-1
- Update to 4.0.18
- Remove patches no longer needed
- Update patches that need updating

* Mon Sep 23 2013 Brett Lentz <blentz@redhat.com> - 3.0.21-9
- finish fixing bz#999384

* Fri Sep 20 2013 Joe Orton <jorton@redhat.com> - 3.0.21-8
- update packaging for httpd 2.4.x

* Thu Sep 19 2013 Troy Dawson <tdawson@redhat.com> - 3.0.21-7
- Fix for F20 FTBFS (#993310)

* Thu Aug 22 2013 Brett Lentz <blentz@redhat.com> - 3.0.21-6
- bz#999384

* Sun Aug 04 2013 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.21-5
- Rebuilt for https://fedoraproject.org/wiki/Fedora_20_Mass_Rebuild

* Thu Jul 18 2013 Troy Dawson <tdawson@redhat.com> - 3.0.21-4
- Fix for CVE-2013-4136 (#985634)

* Fri Jun 21 2013 Troy Dawson <tdawson@redhat.com> - 3.0.21-3
- Putting the agents back to where they originally were

* Fri Jun 21 2013 Troy Dawson <tdawson@redhat.com> - 3.0.21-2
- Remove Rakefile (only used for building) (#976843)

* Thu May 30 2013 Troy Dawson <tdawson@redhat.com> - 3.0.21-1
- Update to version 3.0.21
- Fix for CVE-2013-2119

* Thu May 16 2013 Troy Dawson <tdawson@redhat.com> - 3.0.19-4
- Fix to make agents work on F19+

* Wed Mar 13 2013 Troy Dawson <tdawson@redhat.com> - 3.0.19-3
- Fix to make it build/install on F19+
- Added patch105

* Thu Feb 14 2013 Fedora Release Engineering <rel-eng@lists.fedoraproject.org> - 3.0.19-2
- Rebuilt for https://fedoraproject.org/wiki/Fedora_19_Mass_Rebuild

* Sun Jan 20 2013 Orion Poplawski <orion@cora.nwra.com> - 3.0.19-1
- Update to 3.0.19

* Wed Sep 19 2012 Orion Poplawski <orion@cora.nwra.com> - 3.0.17-3
- Drop dependency on rubygem(file-tail), no longer needed

* Fri Sep 7 2012 Brett Lentz <blentz@redhat.com> - 3.0.17-2
- Fix License

* Thu Sep 6 2012 Brett Lentz <blentz@redhat.com> - 3.0.17-1
- update to 3.0.17

* Wed Sep 5 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-15
- add support for tmpfiles.d

* Tue Sep 4 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-14
- Fix License tag
- Fix gem_extdir ownership issue

* Wed Aug 29 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-13
- fix pathing issues
- fix ruby abi requires

* Wed Aug 29 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-12
- remove capability for running passenger standalone until daemon_controller is updated

* Tue Aug 28 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-11
- fix issues with fastthread

* Mon Aug 27 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-10
- get test suite sort of working
- move agents to gem_extdir

* Fri Aug 24 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-9
- stop using _bindir
- fix native libs path
- fix ownership on extdir
- improve test output

* Wed Aug 22 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-8
- removed policycoreutils requirement
- moved native libs to gem_extdir

* Wed Aug 22 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-7
- remove selinux policy module. it's in the base policy now.

* Fri Aug 17 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-6
- put native-libs into ruby_vendorarchdir.

* Thu Aug 16 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-5
- clean up packaging and file placement.
- add logrotate file for /var/log/passenger-analytics

* Wed Aug 15 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-4
- backported fix only needed on f18+

* Wed Aug 15 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-3
- backport fix from https://svn.boost.org/trac/boost/ticket/6940

* Mon Aug 13 2012 Brett Lentz <blentz@redhat.com> - 3.0.14-2
- remove F15 conditional. F15 is EOL.

* Fri Jul 27 2012 Troy Dawson <tdawson@redhat.com> - 3.0.14-1
- Updated to version 3.0.14

* Fri Jul 27 2012 Troy Dawson <tdawson@redhat.com> - 3.0.12-6
- Added patch20, spawn-ip
- Changed selinux files to be more dynamic

* Tue Jun 05 2012 Troy Dawson <tdawson@redhat.com> - 3.0.12-5
- Add all the selinux files

* Tue Jun 05 2012 Troy Dawson <tdawson@redhat.com> - 3.0.12-4
- Added selinux configurations

* Tue Jun 05 2012 Troy Dawson <tdawson@redhat.com> - 3.0.12-3
- Added native and native-libs rpms.

* Mon Apr 16 2012 Brett Lentz <blentz@redhat.com> - 3.0.12-2
- Add dist to release.
- Shuffle around deprecated buildrequires and requires.

* Mon Apr 16 2012 Brett Lentz <blentz@redhat.com> - 3.0.12-1
- Update to 3.0.12
- Incorporate specfile changes from kanarip's version

* Wed Apr 11 2012 Brett Lentz <blentz@redhat.com> - 3.0.11-1
- Initial spec file
